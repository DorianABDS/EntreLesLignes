name: CI Frontend & Backend

on:
  push:
    branches: [ main, ci-cd ]
  pull_request:
    branches: [ main, ci-cd ]
  workflow_dispatch:

jobs:
  detect-changes:
    name: Detect changed paths
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
              - '.github/workflows/ci.yml'
            backend:
              - 'backend/**'
              - '.github/workflows/ci.yml'

  frontend-ci:
    name: Frontend CI
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Build project
        run: npm run build

      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  backend-ci:
    name: Backend CI
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Validate Prisma schema
        run: npx prisma validate

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run linter
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        run: npx dotenv -e .env -- npm test
        continue-on-error: true

      - name: Build project
        run: npm run build

      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
