name: CI Backend
# Run continuous integration for the backend on push or PR to main/ci-cd if backend files or this workflow change

on:
  push:
    branches: [ main, ci-cd ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'
  pull_request:
    branches: [ main, ci-cd ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'

jobs:
  backend-ci:
    # Backend CI job running on Ubuntu
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend  # Run commands from backend folder

    strategy:
      matrix:
        node-version: [20.x]  # Test against Node 20

    steps:
    - name: Checkout code
      # Get repository code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      # Install Node.js and enable npm caching
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      # Install npm dependencies
      run: npm ci

    - name: Set DATABASE_URL
      # Set DATABASE_URL environment variable
      run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

    - name: Validate Prisma schema
      # Check Prisma schema validity
      run: npx prisma validate

    - name: Generate Prisma Client
      # Generate Prisma client
      run: npx prisma generate

    - name: Run linter
      # Run code linter, continue on error
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      # Run tests with dotenv, continue on error
      run: npx dotenv -e .env -- npm test
      continue-on-error: true

    - name: Build project
      # Build backend
      run: npm run build

    - name: Security audit
      # Run npm audit at moderate level, continue on error
      run: npm audit --audit-level=moderate
      continue-on-error: true
